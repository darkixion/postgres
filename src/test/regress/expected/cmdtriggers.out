--
-- COMMAND TRIGGERS
--
create or replace function snitch
 (in tg_when text, in cmd_tag text, in objectid oid, in schemaname text, in objectname text)
 returns void language plpgsql
as $$
begin
  -- can't output the objectid here that would break pg_regress
  raise notice 'snitch: % % % %', tg_when, cmd_tag, schemaname, objectname;
end;
$$;
create trigger snitch_before before any command execute procedure snitch();
create trigger snitch_after  after  any command execute procedure snitch();
alter trigger snitch_before on any command set disable;
alter trigger snitch_before on any command set enable;
create trigger snitch_some_more
         after command create table, alter table, drop table,
	               create function, create collation,
		       alter operator, create domain, alter schema
       execute procedure snitch();
create trigger snitch_some_even_more
        before command create trigger, alter trigger, drop trigger,
	       	       create schema, drop schema,
	               create aggregate, alter collation, create operator,
		       alter domain, create type, alter type
       execute procedure snitch();
create schema cmd;
NOTICE:  snitch: BEFORE CREATE SCHEMA <NULL> <NULL>
NOTICE:  snitch: BEFORE CREATE SCHEMA <NULL> cmd
NOTICE:  snitch: AFTER CREATE SCHEMA <NULL> <NULL>
create table cmd.foo(id bigserial primary key);
NOTICE:  snitch: BEFORE CREATE TABLE <NULL> <NULL>
NOTICE:  CREATE TABLE will create implicit sequence "foo_id_seq" for serial column "foo.id"
NOTICE:  snitch: BEFORE CREATE SEQUENCE <NULL> <NULL>
NOTICE:  snitch: AFTER CREATE SEQUENCE <NULL> <NULL>
NOTICE:  snitch: BEFORE CREATE INDEX <NULL> <NULL>
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "foo_pkey" for table "foo"
NOTICE:  snitch: AFTER CREATE INDEX <NULL> <NULL>
NOTICE:  snitch: BEFORE ALTER SEQUENCE <NULL> <NULL>
NOTICE:  snitch: AFTER ALTER SEQUENCE <NULL> <NULL>
NOTICE:  snitch: AFTER CREATE TABLE cmd foo
NOTICE:  snitch: AFTER CREATE TABLE <NULL> <NULL>
create view cmd.v as select * from cmd.foo;
NOTICE:  snitch: BEFORE CREATE VIEW <NULL> <NULL>
NOTICE:  snitch: AFTER CREATE VIEW <NULL> <NULL>
alter table cmd.foo add column t text;
NOTICE:  snitch: BEFORE ALTER TABLE <NULL> <NULL>
NOTICE:  snitch: AFTER ALTER TABLE cmd foo
NOTICE:  snitch: AFTER ALTER TABLE <NULL> <NULL>
set session_replication_role to replica;
create table cmd.bar();
reset session_replication_role;
create index idx_foo on cmd.foo(t);
NOTICE:  snitch: BEFORE CREATE INDEX <NULL> <NULL>
NOTICE:  snitch: AFTER CREATE INDEX <NULL> <NULL>
drop index cmd.idx_foo;
NOTICE:  snitch: BEFORE DROP INDEX <NULL> <NULL>
NOTICE:  snitch: AFTER DROP INDEX <NULL> <NULL>
create function cmd.fun(int) returns text language sql
as $$ select t from cmd.foo where id = $1; $$;
NOTICE:  snitch: BEFORE CREATE FUNCTION <NULL> <NULL>
NOTICE:  snitch: AFTER CREATE FUNCTION cmd fun
NOTICE:  snitch: AFTER CREATE FUNCTION <NULL> <NULL>
alter function cmd.fun(int) strict;
NOTICE:  snitch: BEFORE ALTER FUNCTION <NULL> <NULL>
NOTICE:  snitch: AFTER ALTER FUNCTION <NULL> <NULL>
alter function cmd.fun(int) rename to notfun;
NOTICE:  snitch: BEFORE ALTER FUNCTION <NULL> <NULL>
NOTICE:  snitch: AFTER ALTER FUNCTION <NULL> <NULL>
drop function cmd.notfun(int);
NOTICE:  snitch: BEFORE DROP FUNCTION <NULL> <NULL>
NOTICE:  snitch: AFTER DROP FUNCTION <NULL> <NULL>
create function cmd.plus1(int) returns bigint language sql
as $$ select $1::bigint + 1; $$;
NOTICE:  snitch: BEFORE CREATE FUNCTION <NULL> <NULL>
NOTICE:  snitch: AFTER CREATE FUNCTION cmd plus1
NOTICE:  snitch: AFTER CREATE FUNCTION <NULL> <NULL>
create operator cmd.+!(procedure = cmd.plus1, leftarg = int);
NOTICE:  snitch: BEFORE CREATE OPERATOR <NULL> <NULL>
NOTICE:  snitch: BEFORE CREATE OPERATOR cmd +!
NOTICE:  snitch: AFTER CREATE OPERATOR <NULL> <NULL>
alter operator cmd.+!(int, NONE) set schema public;
NOTICE:  snitch: BEFORE ALTER OPERATOR <NULL> <NULL>
NOTICE:  snitch: AFTER ALTER OPERATOR public +!
NOTICE:  snitch: AFTER ALTER OPERATOR <NULL> <NULL>
drop operator public.+!(int, NONE);
NOTICE:  snitch: BEFORE DROP OPERATOR <NULL> <NULL>
NOTICE:  snitch: AFTER DROP OPERATOR <NULL> <NULL>
create aggregate cmd.avg (float8)
(
    sfunc = float8_accum,
    stype = float8[],
    finalfunc = float8_avg,
    initcond = '{0,0,0}'
);
NOTICE:  snitch: BEFORE CREATE AGGREGATE <NULL> <NULL>
NOTICE:  snitch: BEFORE CREATE AGGREGATE cmd avg
NOTICE:  snitch: AFTER CREATE AGGREGATE <NULL> <NULL>
alter aggregate cmd.avg(float8) set schema public;
NOTICE:  snitch: BEFORE ALTER AGGREGATE <NULL> <NULL>
NOTICE:  snitch: AFTER ALTER AGGREGATE <NULL> <NULL>
drop aggregate public.avg(float8);
NOTICE:  snitch: BEFORE DROP AGGREGATE <NULL> <NULL>
NOTICE:  snitch: AFTER DROP AGGREGATE <NULL> <NULL>
create collation cmd.french (LOCALE = 'fr_FR');
NOTICE:  snitch: BEFORE CREATE COLLATION <NULL> <NULL>
NOTICE:  snitch: AFTER CREATE COLLATION cmd french
NOTICE:  snitch: AFTER CREATE COLLATION <NULL> <NULL>
alter collation cmd.french rename to francais;
NOTICE:  snitch: BEFORE ALTER COLLATION <NULL> <NULL>
NOTICE:  snitch: BEFORE ALTER COLLATION cmd french
NOTICE:  snitch: AFTER ALTER COLLATION <NULL> <NULL>
create type cmd.compfoo AS (f1 int, f2 text);
NOTICE:  snitch: BEFORE CREATE TYPE <NULL> <NULL>
NOTICE:  snitch: BEFORE CREATE TYPE cmd compfoo
NOTICE:  snitch: AFTER CREATE TYPE <NULL> <NULL>
alter type cmd.compfoo add attribute f3 text;
NOTICE:  snitch: BEFORE ALTER TYPE <NULL> <NULL>
NOTICE:  snitch: BEFORE ALTER TYPE cmd compfoo
NOTICE:  snitch: AFTER ALTER TYPE <NULL> <NULL>
drop type cmd.compfoo;
NOTICE:  snitch: BEFORE DROP TYPE <NULL> <NULL>
NOTICE:  snitch: AFTER DROP TYPE <NULL> <NULL>
create type cmd.bug_status as enum ('new', 'open', 'closed');
NOTICE:  snitch: BEFORE CREATE TYPE <NULL> <NULL>
NOTICE:  snitch: BEFORE CREATE TYPE cmd bug_status
NOTICE:  snitch: AFTER CREATE TYPE <NULL> <NULL>
alter type cmd.bug_status add value 'wontfix';
NOTICE:  snitch: BEFORE ALTER TYPE <NULL> <NULL>
NOTICE:  snitch: AFTER ALTER TYPE <NULL> <NULL>
create domain cmd.us_postal_code as text check(value ~ '^\d{5}$' or value ~ '^\d{5}-\d{4}$');
NOTICE:  snitch: BEFORE CREATE DOMAIN <NULL> <NULL>
NOTICE:  snitch: AFTER CREATE DOMAIN cmd us_postal_code
NOTICE:  snitch: AFTER CREATE DOMAIN <NULL> <NULL>
alter domain cmd.us_postal_code set not null;
NOTICE:  snitch: BEFORE ALTER DOMAIN <NULL> <NULL>
NOTICE:  snitch: AFTER ALTER DOMAIN <NULL> <NULL>
create function cmd.trigfunc() returns trigger language plpgsql as
$$ begin raise notice 'trigfunc';  end;$$;
NOTICE:  snitch: BEFORE CREATE FUNCTION <NULL> <NULL>
NOTICE:  snitch: AFTER CREATE FUNCTION cmd trigfunc
NOTICE:  snitch: AFTER CREATE FUNCTION <NULL> <NULL>
create trigger footg before update on cmd.foo for each row execute procedure cmd.trigfunc();
NOTICE:  snitch: BEFORE CREATE TRIGGER <NULL> <NULL>
NOTICE:  snitch: BEFORE CREATE TRIGGER cmd footg
NOTICE:  snitch: AFTER CREATE TRIGGER <NULL> <NULL>
alter trigger footg on cmd.foo rename to foo_trigger;
NOTICE:  snitch: BEFORE ALTER TRIGGER <NULL> <NULL>
NOTICE:  snitch: BEFORE ALTER TRIGGER cmd footg
NOTICE:  snitch: AFTER ALTER TRIGGER <NULL> <NULL>
drop trigger foo_trigger on cmd.foo;
NOTICE:  snitch: BEFORE DROP TRIGGER <NULL> <NULL>
NOTICE:  snitch: BEFORE DROP TRIGGER <NULL> foo_trigger
NOTICE:  snitch: AFTER DROP TRIGGER <NULL> <NULL>
alter schema cmd rename to cmd1;
NOTICE:  snitch: BEFORE ALTER SCHEMA <NULL> <NULL>
NOTICE:  snitch: AFTER ALTER SCHEMA <NULL> cmd1
NOTICE:  snitch: AFTER ALTER SCHEMA <NULL> <NULL>
drop schema cmd1 cascade;
NOTICE:  snitch: BEFORE DROP SCHEMA <NULL> <NULL>
NOTICE:  snitch: BEFORE DROP SCHEMA <NULL> cmd1
NOTICE:  drop cascades to 8 other objects
DETAIL:  drop cascades to table cmd1.foo
drop cascades to view cmd1.v
drop cascades to table cmd1.bar
drop cascades to function cmd1.plus1(integer)
drop cascades to collation francais
drop cascades to type cmd1.bug_status
drop cascades to type cmd1.us_postal_code
drop cascades to function cmd1.trigfunc()
NOTICE:  snitch: AFTER DROP SCHEMA <NULL> <NULL>
drop trigger snitch_before on any command;
drop trigger snitch_after  on any command;
drop trigger snitch_some_more
  on command create table, alter table, drop table,
     	     create function, create collation,
	     alter operator, create domain, alter schema;
drop trigger snitch_some_even_more
  on command create trigger, alter trigger, drop trigger,
	     create schema, drop schema,
	     create aggregate, alter collation, create operator,
             alter domain, create type, alter type;
