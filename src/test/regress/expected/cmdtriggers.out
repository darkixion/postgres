--
-- COMMAND TRIGGERS
--
create or replace function any_snitch
 (in tg_when text, in cmd_tag text, in objectid oid, in schemaname text, in objectname text)
 returns void language plpgsql
as $$
begin
  -- can't output the objectid here that would break pg_regress
  raise notice 'snitch: % any % %.%', tg_when, cmd_tag, schemaname, objectname;
end;
$$;
create or replace function snitch
 (in tg_when text, in cmd_tag text, in objectid oid, in schemaname text, in objectname text)
 returns void language plpgsql
as $$
begin
  -- can't output the objectid here that would break pg_regress
  raise notice 'snitch: % % %.%', tg_when, cmd_tag, schemaname, objectname;
end;
$$;
create command trigger snitch_before before any command execute procedure any_snitch();
create command trigger snitch_after_ after  any command execute procedure any_snitch();
alter command trigger snitch_before set disable;
alter command trigger snitch_before set enable;
alter command trigger snitch_after_ rename to snitch_after;
create command trigger snitch_create_table after create table execute procedure snitch();
create command trigger snitch_create_seq after create sequence execute procedure snitch();
create command trigger snitch_create_view after create view execute procedure snitch();
create command trigger snitch_alter_table after alter table execute procedure snitch();
create command trigger snitch_alter_seq after alter sequence execute procedure snitch();
create command trigger snitch_alter_view after alter view execute procedure snitch();
create command trigger snitch_drop_table after drop table execute procedure snitch();
create command trigger snitch_create_function after create function execute procedure snitch();
create command trigger snitch_create_collation after create collation execute procedure snitch();
create command trigger snitch_alter_operator after alter operator execute procedure snitch();
create command trigger snitch_create_domain after create domain execute procedure snitch();
create command trigger snitch_alter_schema after alter schema execute procedure snitch();
create command trigger snitch_create_tsconfig after create text search configuration execute procedure snitch();
create command trigger snitch_create_tsdict after create text search dictionary execute procedure snitch();
create command trigger snitch_create_tsparser after create text search parser execute procedure snitch();
create command trigger snitch_create_tstmpl after create text search template execute procedure snitch();
create command trigger snitch_after_alter_function after alter function execute procedure snitch();
create command trigger snitch_create_cast after create cast execute procedure snitch();
create command trigger snitch_create_opclass after create operator class execute procedure snitch();
create command trigger snitch_create_trigger before create trigger execute procedure snitch();
create command trigger snitch_alter_trigger before alter trigger execute procedure snitch();
create command trigger snitch_drop_trigger before drop trigger execute procedure snitch();
create command trigger snitch_create_schema before create schema execute procedure snitch();
create command trigger snitch_drop_schema before drop schema execute procedure snitch();
create command trigger snitch_create_aggregate before create aggregate execute procedure snitch();
create command trigger snitch_alter_collation before alter collation execute procedure snitch();
create command trigger snitch_create_operator before create operator execute procedure snitch();
create command trigger snitch_alter_domain before alter domain execute procedure snitch();
create command trigger snitch_create_type before create type execute procedure snitch();
create command trigger snitch_alter_type before alter type execute procedure snitch();
create command trigger snitch_before_alter_function before alter function execute procedure snitch();
create command trigger snitch_alter_conversion before alter conversion execute procedure snitch();
create command trigger snitch_drop_agg before drop aggregate execute procedure snitch();
create command trigger snitch_drop_domain before drop domain execute procedure snitch();
create command trigger snitch_before_drop_tsconf before drop text search configuration execute procedure snitch();
create command trigger snitch_before_drop_tsdict before drop text search dictionary execute procedure snitch();
create command trigger snitch_before_drop_tsparser before drop text search parser execute procedure snitch();
create command trigger snitch_before_drop_tstmpl before drop text search template execute procedure snitch();
create command trigger snitch_vacuum before vacuum execute procedure snitch();
create command trigger snitch_reindex before reindex execute procedure snitch();
WARNING:  REINDEX DATABASE triggers are not supported
DETAIL:  The command trigger will not fire on REINDEX DATABASE.
create schema cmd;
NOTICE:  snitch: BEFORE any CREATE SCHEMA <NULL>.cmd
NOTICE:  snitch: BEFORE CREATE SCHEMA <NULL>.cmd
NOTICE:  snitch: AFTER any CREATE SCHEMA <NULL>.cmd
create schema cmd2;
NOTICE:  snitch: BEFORE any CREATE SCHEMA <NULL>.cmd2
NOTICE:  snitch: BEFORE CREATE SCHEMA <NULL>.cmd2
NOTICE:  snitch: AFTER any CREATE SCHEMA <NULL>.cmd2
create role regbob;
create table cmd.foo(id bigserial primary key);
NOTICE:  CREATE TABLE will create implicit sequence "foo_id_seq" for serial column "foo.id"
NOTICE:  snitch: BEFORE any CREATE SEQUENCE cmd.foo_id_seq
NOTICE:  snitch: AFTER CREATE SEQUENCE cmd.foo_id_seq
NOTICE:  snitch: AFTER any CREATE SEQUENCE cmd.foo_id_seq
NOTICE:  snitch: BEFORE any CREATE TABLE cmd.foo
NOTICE:  snitch: BEFORE any CREATE INDEX cmd.foo_pkey
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "foo_pkey" for table "foo"
NOTICE:  snitch: AFTER any CREATE INDEX cmd.foo_pkey
NOTICE:  snitch: BEFORE any ALTER SEQUENCE cmd.foo_id_seq
NOTICE:  snitch: AFTER ALTER SEQUENCE cmd.foo_id_seq
NOTICE:  snitch: AFTER any ALTER SEQUENCE cmd.foo_id_seq
NOTICE:  snitch: AFTER CREATE TABLE cmd.foo
NOTICE:  snitch: AFTER any CREATE TABLE cmd.foo
create view cmd.v as select * from cmd.foo;
NOTICE:  snitch: BEFORE any CREATE VIEW cmd.v
NOTICE:  snitch: AFTER CREATE VIEW cmd.v
NOTICE:  snitch: AFTER any CREATE VIEW cmd.v
alter table cmd.foo add column t text;
NOTICE:  snitch: BEFORE any ALTER TABLE cmd.foo
NOTICE:  snitch: AFTER ALTER TABLE cmd.foo
NOTICE:  snitch: AFTER any ALTER TABLE cmd.foo
create table test9 (id int, stuff text);
NOTICE:  snitch: BEFORE any CREATE TABLE public.test9
NOTICE:  snitch: AFTER CREATE TABLE public.test9
NOTICE:  snitch: AFTER any CREATE TABLE public.test9
alter table test9 rename to test;
NOTICE:  snitch: BEFORE any ALTER TABLE public.test9
NOTICE:  snitch: AFTER ALTER TABLE public.test
NOTICE:  snitch: AFTER any ALTER TABLE public.test
alter table test set schema cmd;
NOTICE:  snitch: BEFORE any ALTER TABLE public.test
NOTICE:  snitch: AFTER ALTER TABLE cmd.test
NOTICE:  snitch: AFTER any ALTER TABLE cmd.test
alter table cmd.test rename column stuff to things;
NOTICE:  snitch: BEFORE any ALTER TABLE cmd.test
NOTICE:  snitch: AFTER ALTER TABLE cmd.test
NOTICE:  snitch: AFTER any ALTER TABLE cmd.test
alter table cmd.test add column alpha text;
NOTICE:  snitch: BEFORE any ALTER TABLE cmd.test
NOTICE:  snitch: AFTER ALTER TABLE cmd.test
NOTICE:  snitch: AFTER any ALTER TABLE cmd.test
alter table cmd.test alter column alpha set data type varchar(300);
NOTICE:  snitch: BEFORE any ALTER TABLE cmd.test
NOTICE:  snitch: AFTER ALTER TABLE cmd.test
NOTICE:  snitch: AFTER any ALTER TABLE cmd.test
alter table cmd.test alter column alpha set default 'test';
NOTICE:  snitch: BEFORE any ALTER TABLE cmd.test
NOTICE:  snitch: AFTER ALTER TABLE cmd.test
NOTICE:  snitch: AFTER any ALTER TABLE cmd.test
alter table cmd.test alter column alpha drop default;
NOTICE:  snitch: BEFORE any ALTER TABLE cmd.test
NOTICE:  snitch: AFTER ALTER TABLE cmd.test
NOTICE:  snitch: AFTER any ALTER TABLE cmd.test
alter table cmd.test alter column alpha set statistics 78;
NOTICE:  snitch: BEFORE any ALTER TABLE cmd.test
NOTICE:  snitch: AFTER ALTER TABLE cmd.test
NOTICE:  snitch: AFTER any ALTER TABLE cmd.test
alter table cmd.test alter column alpha set storage plain;
NOTICE:  snitch: BEFORE any ALTER TABLE cmd.test
NOTICE:  snitch: AFTER ALTER TABLE cmd.test
NOTICE:  snitch: AFTER any ALTER TABLE cmd.test
alter table cmd.test alter column alpha set not null;
NOTICE:  snitch: BEFORE any ALTER TABLE cmd.test
NOTICE:  snitch: AFTER ALTER TABLE cmd.test
NOTICE:  snitch: AFTER any ALTER TABLE cmd.test
alter table cmd.test alter column alpha drop not null;
NOTICE:  snitch: BEFORE any ALTER TABLE cmd.test
NOTICE:  snitch: AFTER ALTER TABLE cmd.test
NOTICE:  snitch: AFTER any ALTER TABLE cmd.test
alter table cmd.test alter column alpha set (n_distinct = -0.78);
NOTICE:  snitch: BEFORE any ALTER TABLE cmd.test
NOTICE:  snitch: AFTER ALTER TABLE cmd.test
NOTICE:  snitch: AFTER any ALTER TABLE cmd.test
alter table cmd.test alter column alpha reset (n_distinct);
NOTICE:  snitch: BEFORE any ALTER TABLE cmd.test
NOTICE:  snitch: AFTER ALTER TABLE cmd.test
NOTICE:  snitch: AFTER any ALTER TABLE cmd.test
alter table cmd.test drop column alpha;
NOTICE:  snitch: BEFORE any ALTER TABLE cmd.test
NOTICE:  snitch: AFTER ALTER TABLE cmd.test
NOTICE:  snitch: AFTER any ALTER TABLE cmd.test
alter table cmd.test add check (id > 2) not valid;
NOTICE:  snitch: BEFORE any ALTER TABLE cmd.test
NOTICE:  snitch: AFTER ALTER TABLE cmd.test
NOTICE:  snitch: AFTER any ALTER TABLE cmd.test
alter table cmd.test add check (id < 800000);
NOTICE:  snitch: BEFORE any ALTER TABLE cmd.test
NOTICE:  snitch: AFTER ALTER TABLE cmd.test
NOTICE:  snitch: AFTER any ALTER TABLE cmd.test
alter table cmd.test set without cluster;
NOTICE:  snitch: BEFORE any ALTER TABLE cmd.test
NOTICE:  snitch: AFTER ALTER TABLE cmd.test
NOTICE:  snitch: AFTER any ALTER TABLE cmd.test
alter table cmd.test set with oids;
NOTICE:  snitch: BEFORE any ALTER TABLE cmd.test
NOTICE:  snitch: AFTER ALTER TABLE cmd.test
NOTICE:  snitch: AFTER any ALTER TABLE cmd.test
alter table cmd.test set without oids;
NOTICE:  snitch: BEFORE any ALTER TABLE cmd.test
NOTICE:  snitch: AFTER ALTER TABLE cmd.test
NOTICE:  snitch: AFTER any ALTER TABLE cmd.test
create sequence test_seq_;
NOTICE:  snitch: BEFORE any CREATE SEQUENCE public.test_seq_
NOTICE:  snitch: AFTER CREATE SEQUENCE public.test_seq_
NOTICE:  snitch: AFTER any CREATE SEQUENCE public.test_seq_
alter sequence test_seq_ owner to regbob;
NOTICE:  snitch: BEFORE any ALTER SEQUENCE public.test_seq_
NOTICE:  snitch: AFTER ALTER SEQUENCE public.test_seq_
NOTICE:  snitch: AFTER any ALTER SEQUENCE public.test_seq_
alter sequence test_seq_ rename to test_seq;
NOTICE:  snitch: BEFORE any ALTER SEQUENCE public.test_seq_
NOTICE:  snitch: AFTER ALTER SEQUENCE public.test_seq
NOTICE:  snitch: AFTER any ALTER SEQUENCE public.test_seq
alter sequence test_seq set schema cmd;
NOTICE:  snitch: BEFORE any ALTER SEQUENCE public.test_seq
NOTICE:  snitch: AFTER ALTER SEQUENCE cmd.test_seq
NOTICE:  snitch: AFTER any ALTER SEQUENCE cmd.test_seq
alter sequence cmd.test_seq start with 3;
NOTICE:  snitch: BEFORE any ALTER SEQUENCE cmd.test_seq
NOTICE:  snitch: AFTER ALTER SEQUENCE cmd.test_seq
NOTICE:  snitch: AFTER any ALTER SEQUENCE cmd.test_seq
alter sequence cmd.test_seq restart with 4;
NOTICE:  snitch: BEFORE any ALTER SEQUENCE cmd.test_seq
NOTICE:  snitch: AFTER ALTER SEQUENCE cmd.test_seq
NOTICE:  snitch: AFTER any ALTER SEQUENCE cmd.test_seq
alter sequence cmd.test_seq minvalue 3;
NOTICE:  snitch: BEFORE any ALTER SEQUENCE cmd.test_seq
NOTICE:  snitch: AFTER ALTER SEQUENCE cmd.test_seq
NOTICE:  snitch: AFTER any ALTER SEQUENCE cmd.test_seq
alter sequence cmd.test_seq no minvalue;
NOTICE:  snitch: BEFORE any ALTER SEQUENCE cmd.test_seq
NOTICE:  snitch: AFTER ALTER SEQUENCE cmd.test_seq
NOTICE:  snitch: AFTER any ALTER SEQUENCE cmd.test_seq
alter sequence cmd.test_seq maxvalue 900000;
NOTICE:  snitch: BEFORE any ALTER SEQUENCE cmd.test_seq
NOTICE:  snitch: AFTER ALTER SEQUENCE cmd.test_seq
NOTICE:  snitch: AFTER any ALTER SEQUENCE cmd.test_seq
alter sequence cmd.test_seq no maxvalue;
NOTICE:  snitch: BEFORE any ALTER SEQUENCE cmd.test_seq
NOTICE:  snitch: AFTER ALTER SEQUENCE cmd.test_seq
NOTICE:  snitch: AFTER any ALTER SEQUENCE cmd.test_seq
alter sequence cmd.test_seq cache 876;
NOTICE:  snitch: BEFORE any ALTER SEQUENCE cmd.test_seq
NOTICE:  snitch: AFTER ALTER SEQUENCE cmd.test_seq
NOTICE:  snitch: AFTER any ALTER SEQUENCE cmd.test_seq
alter sequence cmd.test_seq cycle;
NOTICE:  snitch: BEFORE any ALTER SEQUENCE cmd.test_seq
NOTICE:  snitch: AFTER ALTER SEQUENCE cmd.test_seq
NOTICE:  snitch: AFTER any ALTER SEQUENCE cmd.test_seq
alter sequence cmd.test_seq no cycle;
NOTICE:  snitch: BEFORE any ALTER SEQUENCE cmd.test_seq
NOTICE:  snitch: AFTER ALTER SEQUENCE cmd.test_seq
NOTICE:  snitch: AFTER any ALTER SEQUENCE cmd.test_seq
create view view_test as select id, things from cmd.test;
NOTICE:  snitch: BEFORE any CREATE VIEW public.view_test
NOTICE:  snitch: AFTER CREATE VIEW public.view_test
NOTICE:  snitch: AFTER any CREATE VIEW public.view_test
alter view view_test owner to regbob;
NOTICE:  snitch: BEFORE any ALTER VIEW public.view_test
NOTICE:  snitch: AFTER ALTER VIEW public.view_test
NOTICE:  snitch: AFTER any ALTER VIEW public.view_test
alter view view_test rename to view_test2;
NOTICE:  snitch: BEFORE any ALTER VIEW public.view_test
NOTICE:  snitch: AFTER ALTER VIEW public.view_test2
NOTICE:  snitch: AFTER any ALTER VIEW public.view_test2
alter view view_test2 set schema cmd;
NOTICE:  snitch: BEFORE any ALTER VIEW public.view_test2
NOTICE:  snitch: AFTER ALTER VIEW cmd.view_test2
NOTICE:  snitch: AFTER any ALTER VIEW cmd.view_test2
alter view cmd.view_test2 alter column id set default 9;
NOTICE:  snitch: BEFORE any ALTER VIEW cmd.view_test2
NOTICE:  snitch: AFTER ALTER VIEW cmd.view_test2
NOTICE:  snitch: AFTER any ALTER VIEW cmd.view_test2
alter view cmd.view_test2 alter column id drop default;
NOTICE:  snitch: BEFORE any ALTER VIEW cmd.view_test2
NOTICE:  snitch: AFTER ALTER VIEW cmd.view_test2
NOTICE:  snitch: AFTER any ALTER VIEW cmd.view_test2
cluster cmd.foo using foo_pkey;
NOTICE:  snitch: BEFORE any CLUSTER cmd.foo
vacuum cmd.foo;
NOTICE:  snitch: BEFORE any VACUUM cmd.foo
NOTICE:  snitch: BEFORE VACUUM cmd.foo
vacuum;
NOTICE:  snitch: BEFORE any VACUUM <NULL>.<NULL>
NOTICE:  snitch: BEFORE VACUUM <NULL>.<NULL>
reindex table cmd.foo;
NOTICE:  snitch: BEFORE any REINDEX cmd.foo
NOTICE:  snitch: BEFORE REINDEX cmd.foo
NOTICE:  snitch: AFTER any REINDEX cmd.foo
set session_replication_role to replica;
create table cmd.bar();
reset session_replication_role;
create index idx_foo on cmd.foo(t);
NOTICE:  snitch: BEFORE any CREATE INDEX cmd.idx_foo
NOTICE:  snitch: AFTER any CREATE INDEX cmd.idx_foo
reindex index cmd.idx_foo;
NOTICE:  snitch: BEFORE any REINDEX cmd.idx_foo
NOTICE:  snitch: BEFORE REINDEX cmd.idx_foo
NOTICE:  snitch: AFTER any REINDEX cmd.idx_foo
drop index cmd.idx_foo;
NOTICE:  snitch: BEFORE any DROP INDEX cmd.idx_foo
NOTICE:  snitch: AFTER any DROP INDEX cmd.idx_foo
create function fun(int) returns text language sql
as $$ select t from cmd.foo where id = $1; $$;
NOTICE:  snitch: BEFORE any CREATE FUNCTION public.fun
NOTICE:  snitch: AFTER CREATE FUNCTION public.fun
NOTICE:  snitch: AFTER any CREATE FUNCTION public.fun
alter function fun(int) strict;
NOTICE:  snitch: BEFORE any ALTER FUNCTION public.fun
NOTICE:  snitch: BEFORE ALTER FUNCTION public.fun
NOTICE:  snitch: AFTER ALTER FUNCTION public.fun
NOTICE:  snitch: AFTER any ALTER FUNCTION public.fun
alter function fun(int) rename to notfun;
NOTICE:  snitch: BEFORE any ALTER FUNCTION public.fun
NOTICE:  snitch: BEFORE ALTER FUNCTION public.fun
NOTICE:  snitch: AFTER ALTER FUNCTION public.notfun
NOTICE:  snitch: AFTER any ALTER FUNCTION public.notfun
alter function notfun(int) set schema cmd;
NOTICE:  snitch: BEFORE any ALTER FUNCTION public.notfun
NOTICE:  snitch: BEFORE ALTER FUNCTION public.notfun
NOTICE:  snitch: AFTER ALTER FUNCTION cmd.notfun
NOTICE:  snitch: AFTER any ALTER FUNCTION cmd.notfun
alter function cmd.notfun(int) owner to regbob;
NOTICE:  snitch: BEFORE any ALTER FUNCTION cmd.notfun
NOTICE:  snitch: BEFORE ALTER FUNCTION cmd.notfun
NOTICE:  snitch: AFTER ALTER FUNCTION cmd.notfun
NOTICE:  snitch: AFTER any ALTER FUNCTION cmd.notfun
alter function cmd.notfun(int) cost 77;
NOTICE:  snitch: BEFORE any ALTER FUNCTION cmd.notfun
NOTICE:  snitch: BEFORE ALTER FUNCTION cmd.notfun
NOTICE:  snitch: AFTER ALTER FUNCTION cmd.notfun
NOTICE:  snitch: AFTER any ALTER FUNCTION cmd.notfun
drop function cmd.notfun(int);
NOTICE:  snitch: BEFORE any DROP FUNCTION cmd.notfun
NOTICE:  snitch: AFTER any DROP FUNCTION cmd.notfun
create function cmd.plus1(int) returns bigint language sql
as $$ select $1::bigint + 1; $$;
NOTICE:  snitch: BEFORE any CREATE FUNCTION cmd.plus1
NOTICE:  snitch: AFTER CREATE FUNCTION cmd.plus1
NOTICE:  snitch: AFTER any CREATE FUNCTION cmd.plus1
create operator cmd.+!(procedure = cmd.plus1, leftarg = int);
NOTICE:  snitch: BEFORE any CREATE OPERATOR cmd.+!
NOTICE:  snitch: BEFORE CREATE OPERATOR cmd.+!
NOTICE:  snitch: AFTER any CREATE OPERATOR cmd.+!
alter operator cmd.+!(int, NONE) set schema public;
NOTICE:  snitch: BEFORE any ALTER OPERATOR cmd.+!
NOTICE:  snitch: AFTER ALTER OPERATOR public.+!
NOTICE:  snitch: AFTER any ALTER OPERATOR public.+!
drop operator public.+!(int, NONE);
NOTICE:  snitch: BEFORE any DROP OPERATOR public.+!
NOTICE:  snitch: AFTER any DROP OPERATOR public.+!
create aggregate cmd.avg (float8)
(
    sfunc = float8_accum,
    stype = float8[],
    finalfunc = float8_avg,
    initcond = '{0,0,0}'
);
NOTICE:  snitch: BEFORE any CREATE AGGREGATE cmd.avg
NOTICE:  snitch: BEFORE CREATE AGGREGATE cmd.avg
NOTICE:  snitch: AFTER any CREATE AGGREGATE cmd.avg
alter aggregate cmd.avg(float8) set schema public;
NOTICE:  snitch: BEFORE any ALTER AGGREGATE cmd.avg
NOTICE:  snitch: AFTER any ALTER AGGREGATE public.avg
drop aggregate public.avg(float8);
NOTICE:  snitch: BEFORE any DROP AGGREGATE public.avg
NOTICE:  snitch: BEFORE DROP AGGREGATE public.avg
NOTICE:  snitch: AFTER any DROP AGGREGATE public.avg
create collation cmd.french (LOCALE = 'fr_FR');
NOTICE:  snitch: BEFORE any CREATE COLLATION cmd.french
NOTICE:  snitch: AFTER CREATE COLLATION cmd.french
NOTICE:  snitch: AFTER any CREATE COLLATION cmd.french
alter collation cmd.french rename to francais;
NOTICE:  snitch: BEFORE any ALTER COLLATION cmd.french
NOTICE:  snitch: BEFORE ALTER COLLATION cmd.french
NOTICE:  snitch: AFTER any ALTER COLLATION cmd.francais
create type cmd.compfoo AS (f1 int, f2 text);
NOTICE:  snitch: BEFORE any CREATE TYPE cmd.compfoo
NOTICE:  snitch: BEFORE CREATE TYPE cmd.compfoo
NOTICE:  snitch: AFTER any CREATE TYPE cmd.compfoo
alter type cmd.compfoo add attribute f3 text;
NOTICE:  snitch: BEFORE any ALTER TYPE cmd.compfoo
NOTICE:  snitch: BEFORE ALTER TYPE cmd.compfoo
NOTICE:  snitch: AFTER any ALTER TYPE cmd.compfoo
create type cmd.type_test AS (a integer, b integer, c text);
NOTICE:  snitch: BEFORE any CREATE TYPE cmd.type_test
NOTICE:  snitch: BEFORE CREATE TYPE cmd.type_test
NOTICE:  snitch: AFTER any CREATE TYPE cmd.type_test
alter type cmd.type_test owner to regbob;
NOTICE:  snitch: BEFORE any ALTER TYPE cmd.type_test
NOTICE:  snitch: BEFORE ALTER TYPE cmd.type_test
NOTICE:  snitch: AFTER any ALTER TYPE cmd.type_test
alter type cmd.type_test rename to type_test2;
NOTICE:  snitch: BEFORE any ALTER TYPE cmd.type_test
NOTICE:  snitch: BEFORE ALTER TYPE cmd.type_test
NOTICE:  snitch: AFTER any ALTER TYPE cmd.type_test2
alter type cmd.type_test2 set schema public;
NOTICE:  snitch: BEFORE any ALTER TYPE cmd.type_test2
NOTICE:  snitch: BEFORE ALTER TYPE cmd.type_test2
NOTICE:  snitch: AFTER any ALTER TYPE public.type_test2
alter type public.type_test2 rename attribute a to z;
NOTICE:  snitch: BEFORE any ALTER TYPE public.type_test2
NOTICE:  snitch: BEFORE ALTER TYPE public.type_test2
NOTICE:  snitch: AFTER any ALTER TYPE public.type_test2
alter type public.type_test2 add attribute alpha text;
NOTICE:  snitch: BEFORE any ALTER TYPE public.type_test2
NOTICE:  snitch: BEFORE ALTER TYPE public.type_test2
NOTICE:  snitch: AFTER any ALTER TYPE public.type_test2
alter type public.type_test2 alter attribute alpha set data type char(90);
NOTICE:  snitch: BEFORE any ALTER TYPE public.type_test2
NOTICE:  snitch: BEFORE ALTER TYPE public.type_test2
NOTICE:  snitch: AFTER any ALTER TYPE public.type_test2
alter type public.type_test2 drop attribute alpha;
NOTICE:  snitch: BEFORE any ALTER TYPE public.type_test2
NOTICE:  snitch: BEFORE ALTER TYPE public.type_test2
NOTICE:  snitch: AFTER any ALTER TYPE public.type_test2
drop type cmd.compfoo;
NOTICE:  snitch: BEFORE any DROP TYPE cmd.compfoo
NOTICE:  snitch: AFTER any DROP TYPE cmd.compfoo
drop type public.type_test2;
NOTICE:  snitch: BEFORE any DROP TYPE public.type_test2
NOTICE:  snitch: AFTER any DROP TYPE public.type_test2
create type cmd.bug_status as enum ('new', 'open', 'closed');
NOTICE:  snitch: BEFORE any CREATE TYPE cmd.bug_status
NOTICE:  snitch: BEFORE CREATE TYPE cmd.bug_status
NOTICE:  snitch: AFTER any CREATE TYPE cmd.bug_status
alter type cmd.bug_status add value 'wontfix';
create domain cmd.us_postal_code as text check(value ~ '^\d{5}$' or value ~ '^\d{5}-\d{4}$');
NOTICE:  snitch: BEFORE any CREATE DOMAIN cmd.us_postal_code
NOTICE:  snitch: AFTER CREATE DOMAIN cmd.us_postal_code
NOTICE:  snitch: AFTER any CREATE DOMAIN cmd.us_postal_code
alter domain cmd.us_postal_code set not null;
NOTICE:  snitch: BEFORE any ALTER DOMAIN cmd.us_postal_code
NOTICE:  snitch: BEFORE ALTER DOMAIN cmd.us_postal_code
NOTICE:  snitch: AFTER any ALTER DOMAIN cmd.us_postal_code
alter domain cmd.us_postal_code set default 90210;
NOTICE:  snitch: BEFORE any ALTER DOMAIN cmd.us_postal_code
NOTICE:  snitch: BEFORE ALTER DOMAIN cmd.us_postal_code
NOTICE:  snitch: AFTER any ALTER DOMAIN cmd.us_postal_code
alter domain cmd.us_postal_code drop default;
NOTICE:  snitch: BEFORE any ALTER DOMAIN cmd.us_postal_code
NOTICE:  snitch: BEFORE ALTER DOMAIN cmd.us_postal_code
NOTICE:  snitch: AFTER any ALTER DOMAIN cmd.us_postal_code
alter domain cmd.us_postal_code drop not null;
NOTICE:  snitch: BEFORE any ALTER DOMAIN cmd.us_postal_code
NOTICE:  snitch: BEFORE ALTER DOMAIN cmd.us_postal_code
NOTICE:  snitch: AFTER any ALTER DOMAIN cmd.us_postal_code
alter domain cmd.us_postal_code add constraint dummy_constraint check (value ~ '^\d{8}$');
NOTICE:  snitch: BEFORE any ALTER DOMAIN cmd.us_postal_code
NOTICE:  snitch: BEFORE ALTER DOMAIN cmd.us_postal_code
NOTICE:  snitch: AFTER any ALTER DOMAIN cmd.us_postal_code
alter domain cmd.us_postal_code drop constraint dummy_constraint;
NOTICE:  snitch: BEFORE any ALTER DOMAIN cmd.us_postal_code
NOTICE:  snitch: BEFORE ALTER DOMAIN cmd.us_postal_code
NOTICE:  snitch: AFTER any ALTER DOMAIN cmd.us_postal_code
alter domain cmd.us_postal_code owner to regbob;
NOTICE:  snitch: BEFORE any ALTER DOMAIN cmd.us_postal_code
NOTICE:  snitch: BEFORE ALTER DOMAIN cmd.us_postal_code
NOTICE:  snitch: AFTER any ALTER DOMAIN cmd.us_postal_code
alter domain cmd.us_postal_code set schema cmd2;
NOTICE:  snitch: BEFORE any ALTER DOMAIN cmd.us_postal_code
NOTICE:  snitch: BEFORE ALTER DOMAIN cmd.us_postal_code
NOTICE:  snitch: AFTER any ALTER DOMAIN cmd2.us_postal_code
drop domain cmd2.us_postal_code;
NOTICE:  snitch: BEFORE any DROP DOMAIN cmd2.us_postal_code
NOTICE:  snitch: BEFORE DROP DOMAIN cmd2.us_postal_code
NOTICE:  snitch: AFTER any DROP DOMAIN cmd2.us_postal_code
create function cmd.trigfunc() returns trigger language plpgsql as
$$ begin raise notice 'trigfunc';  end;$$;
NOTICE:  snitch: BEFORE any CREATE FUNCTION cmd.trigfunc
NOTICE:  snitch: AFTER CREATE FUNCTION cmd.trigfunc
NOTICE:  snitch: AFTER any CREATE FUNCTION cmd.trigfunc
create trigger footg before update on cmd.foo for each row execute procedure cmd.trigfunc();
NOTICE:  snitch: BEFORE any CREATE TRIGGER cmd.footg
NOTICE:  snitch: BEFORE CREATE TRIGGER cmd.footg
NOTICE:  snitch: AFTER any CREATE TRIGGER cmd.footg
alter trigger footg on cmd.foo rename to foo_trigger;
NOTICE:  snitch: BEFORE any ALTER TRIGGER cmd.footg
NOTICE:  snitch: BEFORE ALTER TRIGGER cmd.footg
NOTICE:  snitch: AFTER any ALTER TRIGGER cmd.foo_trigger
drop trigger foo_trigger on cmd.foo;
NOTICE:  snitch: BEFORE any DROP TRIGGER <NULL>.foo_trigger
NOTICE:  snitch: BEFORE DROP TRIGGER <NULL>.foo_trigger
NOTICE:  snitch: AFTER any DROP TRIGGER <NULL>.foo_trigger
create conversion test for 'utf8' to 'sjis' from utf8_to_sjis;
NOTICE:  snitch: BEFORE any CREATE CONVERSION public.test
NOTICE:  snitch: AFTER any CREATE CONVERSION public.test
create default conversion test2 for 'utf8' to 'sjis' from utf8_to_sjis;
NOTICE:  snitch: BEFORE any CREATE CONVERSION public.test2
NOTICE:  snitch: AFTER any CREATE CONVERSION public.test2
alter conversion test2 rename to test3;
NOTICE:  snitch: BEFORE any ALTER CONVERSION public.test2
NOTICE:  snitch: BEFORE ALTER CONVERSION public.test2
NOTICE:  snitch: AFTER any ALTER CONVERSION public.test3
drop conversion test3;
NOTICE:  snitch: BEFORE any DROP CONVERSION public.test3
NOTICE:  snitch: AFTER any DROP CONVERSION public.test3
drop conversion test;
NOTICE:  snitch: BEFORE any DROP CONVERSION public.test
NOTICE:  snitch: AFTER any DROP CONVERSION public.test
create operator class test_op_class
   for type anyenum using hash as
   operator 1  =,
   function 1  hashenum(anyenum);
NOTICE:  snitch: BEFORE any CREATE OPERATOR CLASS public.test_op_class
NOTICE:  snitch: AFTER CREATE OPERATOR CLASS public.test_op_class
NOTICE:  snitch: AFTER any CREATE OPERATOR CLASS public.test_op_class
create text search configuration test (parser = "default");
NOTICE:  snitch: BEFORE any CREATE TEXT SEARCH CONFIGURATION public.test
NOTICE:  snitch: AFTER CREATE TEXT SEARCH CONFIGURATION public.test
NOTICE:  snitch: AFTER any CREATE TEXT SEARCH CONFIGURATION public.test
create text search dictionary test_stem (
   template = snowball,
   language = 'english', stopwords = 'english'
);
NOTICE:  snitch: BEFORE any CREATE TEXT SEARCH DICTIONARY public.test_stem
NOTICE:  snitch: AFTER CREATE TEXT SEARCH DICTIONARY public.test_stem
NOTICE:  snitch: AFTER any CREATE TEXT SEARCH DICTIONARY public.test_stem
create text search parser test_parser (
  start = prsd_start,
  gettoken = prsd_nexttoken,
  end = prsd_end,
  lextypes = prsd_lextype,
  headline = prsd_headline
);
NOTICE:  snitch: BEFORE any CREATE TEXT SEARCH PARSER public.test_parser
NOTICE:  snitch: AFTER CREATE TEXT SEARCH PARSER public.test_parser
NOTICE:  snitch: AFTER any CREATE TEXT SEARCH PARSER public.test_parser
create text search template test_template (
  init = dsimple_init,
  lexize = dsimple_lexize
);
NOTICE:  snitch: BEFORE any CREATE TEXT SEARCH TEMPLATE public.test_template
NOTICE:  snitch: AFTER CREATE TEXT SEARCH TEMPLATE public.test_template
NOTICE:  snitch: AFTER any CREATE TEXT SEARCH TEMPLATE public.test_template
drop text search configuration test;
NOTICE:  snitch: BEFORE any DROP TEXT SEARCH CONFIGURATION public.test
NOTICE:  snitch: BEFORE DROP TEXT SEARCH CONFIGURATION public.test
NOTICE:  snitch: AFTER any DROP TEXT SEARCH CONFIGURATION public.test
drop text search dictionary test_stem;
NOTICE:  snitch: BEFORE any DROP TEXT SEARCH DICTIONARY public.test_stem
NOTICE:  snitch: BEFORE DROP TEXT SEARCH DICTIONARY public.test_stem
NOTICE:  snitch: AFTER any DROP TEXT SEARCH DICTIONARY public.test_stem
drop text search parser test_parser;
NOTICE:  snitch: BEFORE any DROP TEXT SEARCH PARSER public.test_parser
NOTICE:  snitch: BEFORE DROP TEXT SEARCH PARSER public.test_parser
NOTICE:  snitch: AFTER any DROP TEXT SEARCH PARSER public.test_parser
drop text search template test_template;
NOTICE:  snitch: BEFORE any DROP TEXT SEARCH TEMPLATE public.test_template
NOTICE:  snitch: BEFORE DROP TEXT SEARCH TEMPLATE public.test_template
NOTICE:  snitch: AFTER any DROP TEXT SEARCH TEMPLATE public.test_template
create function cmd.testcast(text) returns int4  language plpgsql as $$begin return 4::int4;end;$$;
NOTICE:  snitch: BEFORE any CREATE FUNCTION cmd.testcast
NOTICE:  snitch: AFTER CREATE FUNCTION cmd.testcast
NOTICE:  snitch: AFTER any CREATE FUNCTION cmd.testcast
create cast (text as int4) with function cmd.testcast(text) as assignment;
NOTICE:  snitch: BEFORE any CREATE CAST <NULL>.<NULL>
NOTICE:  snitch: AFTER CREATE CAST <NULL>.<NULL>
NOTICE:  snitch: AFTER any CREATE CAST <NULL>.<NULL>
alter schema cmd rename to cmd1;
NOTICE:  snitch: BEFORE any ALTER SCHEMA <NULL>.cmd
NOTICE:  snitch: AFTER ALTER SCHEMA <NULL>.cmd1
NOTICE:  snitch: AFTER any ALTER SCHEMA <NULL>.cmd1
drop schema cmd1 cascade;
NOTICE:  snitch: BEFORE any DROP SCHEMA <NULL>.cmd1
NOTICE:  snitch: BEFORE DROP SCHEMA <NULL>.cmd1
NOTICE:  drop cascades to 12 other objects
DETAIL:  drop cascades to table cmd1.foo
drop cascades to view cmd1.v
drop cascades to table cmd1.test
drop cascades to sequence cmd1.test_seq
drop cascades to view cmd1.view_test2
drop cascades to table cmd1.bar
drop cascades to function cmd1.plus1(integer)
drop cascades to collation francais
drop cascades to type cmd1.bug_status
drop cascades to function cmd1.trigfunc()
drop cascades to function cmd1.testcast(text)
drop cascades to cast from text to integer
NOTICE:  snitch: AFTER any DROP SCHEMA <NULL>.cmd1
drop schema cmd2 cascade;
NOTICE:  snitch: BEFORE any DROP SCHEMA <NULL>.cmd2
NOTICE:  snitch: BEFORE DROP SCHEMA <NULL>.cmd2
NOTICE:  snitch: AFTER any DROP SCHEMA <NULL>.cmd2
drop role regbob;
drop command trigger snitch_before;
drop command trigger snitch_after;
drop command trigger snitch_create_table;
drop command trigger snitch_create_seq;
drop command trigger snitch_create_view;
drop command trigger snitch_alter_table;
drop command trigger snitch_alter_seq;
drop command trigger snitch_alter_view;
drop command trigger snitch_drop_table;
drop command trigger snitch_create_function;
drop command trigger snitch_create_collation;
drop command trigger snitch_alter_operator;
drop command trigger snitch_create_domain;
drop command trigger snitch_alter_schema;
drop command trigger snitch_create_tsconfig;
drop command trigger snitch_create_tsdict;
drop command trigger snitch_create_tsparser;
drop command trigger snitch_create_tstmpl;
drop command trigger snitch_after_alter_function;
drop command trigger snitch_create_cast;
drop command trigger snitch_create_opclass;
drop command trigger snitch_create_trigger;
drop command trigger snitch_alter_trigger;
drop command trigger snitch_drop_trigger;
drop command trigger snitch_create_schema;
drop command trigger snitch_drop_schema;
drop command trigger snitch_create_aggregate;
drop command trigger snitch_alter_collation;
drop command trigger snitch_create_operator;
drop command trigger snitch_alter_domain;
drop command trigger snitch_create_type;
drop command trigger snitch_alter_type;
drop command trigger snitch_before_alter_function;
drop command trigger snitch_alter_conversion;
drop command trigger snitch_drop_agg;
drop command trigger snitch_drop_domain;
drop command trigger snitch_before_drop_tsconf;
drop command trigger snitch_before_drop_tsdict;
drop command trigger snitch_before_drop_tsparser;
drop command trigger snitch_before_drop_tstmpl;
drop command trigger snitch_vacuum;
drop command trigger snitch_reindex;
